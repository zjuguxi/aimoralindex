"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.onDev = exports.onBuild = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = require("path");
const createEmailFunction = ({ netlifyConfig, }) => {
    var _a, _b, _c;
    console.info("Creating function for Netlify Emails integration");
    const emailsDirectory = (_a = process.env.NETLIFY_EMAILS_DIRECTORY) !== null && _a !== void 0 ? _a : "./emails";
    if (((_c = (_b = netlifyConfig.functions) === null || _b === void 0 ? void 0 : _b.emails) === null || _c === void 0 ? void 0 : _c.included_files) !== undefined) {
        netlifyConfig.functions.emails.included_files.push(`${emailsDirectory}/**`);
    }
    else {
        netlifyConfig.functions.emails = Object.assign(Object.assign({}, netlifyConfig.functions.emails), { included_files: [`${emailsDirectory}/**`] });
    }
    const emailFunctionDirectory = (0, path_1.join)(".netlify", "functions-internal", "emails");
    fs_1.default.mkdirSync(emailFunctionDirectory, {
        recursive: true,
    });
    // Clean the email function directory
    fs_1.default.readdirSync(emailFunctionDirectory).forEach((file) => {
        fs_1.default.unlinkSync((0, path_1.join)(emailFunctionDirectory, file));
    });
    fs_1.default.copyFileSync((0, path_1.join)(__dirname, "../src", "handler", "index.js"), (0, path_1.join)(emailFunctionDirectory, "index.js"));
};
exports.onBuild = createEmailFunction;
exports.onDev = createEmailFunction;
