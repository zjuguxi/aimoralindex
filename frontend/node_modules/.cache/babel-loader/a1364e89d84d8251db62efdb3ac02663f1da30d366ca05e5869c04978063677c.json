{"ast":null,"code":"var _jsxFileName = \"/Users/guxi/Study/870/Automation/aimoralindex/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport AIScoreCard from './AIScoreCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [activeSection, setActiveSection] = useState('home');\n  const [aiData, setAiData] = useState([]);\n  const fetchScores = async () => {\n    try {\n      const response = await fetch('https://aimoralindex.netlify.app/api/scores');\n      if (!response.ok) {\n        throw new Error('网络响应不是 OK');\n      }\n      const data = await response.json();\n      setAiData(data);\n\n      // 更新缓存\n      localStorage.setItem('aiScores', JSON.stringify(data));\n      localStorage.setItem('cacheTime', new Date().getTime());\n    } catch (error) {\n      console.error('获取数据时出错:', error);\n      // 返回默认分数\n      return [0, 0, 0];\n    }\n  };\n  useEffect(() => {\n    fetchScores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen text-gray-900 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setActiveSection: setActiveSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow\",\n      children: activeSection === 'home' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 max-w-4xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-center text-gray-800\",\n          children: \"Generative AI Morality Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n          children: [aiData.map(entry => /*#__PURE__*/_jsxDEV(AIScoreCard, {\n            name: \"chatgpt\",\n            score: entry.chatgpt,\n            history: aiData.map(data => ({\n              date: data.date,\n              score: data.chatgpt\n            }))\n          }, entry.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)), aiData.map(entry => /*#__PURE__*/_jsxDEV(AIScoreCard, {\n            name: \"claude\",\n            score: entry.claude,\n            history: aiData.map(data => ({\n              date: data.date,\n              score: data.claude\n            }))\n          }, entry.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)), aiData.map(entry => /*#__PURE__*/_jsxDEV(AIScoreCard, {\n            name: \"gemini\",\n            score: entry.gemini,\n            history: aiData.map(data => ({\n              date: data.date,\n              score: data.gemini\n            }))\n          }, entry.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      setActiveSection: setActiveSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QoyjG2T0y2X9TQ/1+71tkXEqJP4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","AIScoreCard","jsxDEV","_jsxDEV","App","_s","activeSection","setActiveSection","aiData","setAiData","fetchScores","response","fetch","ok","Error","data","json","localStorage","setItem","JSON","stringify","Date","getTime","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","score","chatgpt","history","date","claude","gemini","_c","$RefreshReg$"],"sources":["/Users/guxi/Study/870/Automation/aimoralindex/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport AIScoreCard from './AIScoreCard';\n\nconst App = () => {\n  const [activeSection, setActiveSection] = useState('home');\n  const [aiData, setAiData] = useState([]);\n\n  const fetchScores = async () => {\n    try {\n      const response = await fetch('https://aimoralindex.netlify.app/api/scores');\n      if (!response.ok) {\n        throw new Error('网络响应不是 OK');\n      }\n      const data = await response.json();\n      setAiData(data);\n      \n      // 更新缓存\n      localStorage.setItem('aiScores', JSON.stringify(data));\n      localStorage.setItem('cacheTime', new Date().getTime());\n    } catch (error) {\n      console.error('获取数据时出错:', error);\n      // 返回默认分数\n      return [0, 0, 0];\n    }\n  };\n\n  useEffect(() => {\n    fetchScores();\n  }, []);\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen text-gray-900 flex flex-col\">\n      <Navbar setActiveSection={setActiveSection} />\n      <div className=\"flex-grow\">\n        {activeSection === 'home' && (\n          <div className=\"p-8 max-w-4xl mx-auto\">\n            <h1 className=\"text-3xl font-bold text-center text-gray-800\">Generative AI Morality Index</h1>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {aiData.map((entry) => (\n                <AIScoreCard \n                  key={entry.date} \n                  name=\"chatgpt\" \n                  score={entry.chatgpt} \n                  history={aiData.map(data => ({ date: data.date, score: data.chatgpt }))} \n                />\n              ))}\n              {aiData.map((entry) => (\n                <AIScoreCard \n                  key={entry.date} \n                  name=\"claude\" \n                  score={entry.claude} \n                  history={aiData.map(data => ({ date: data.date, score: data.claude }))} \n                />\n              ))}\n              {aiData.map((entry) => (\n                <AIScoreCard \n                  key={entry.date} \n                  name=\"gemini\" \n                  score={entry.gemini} \n                  history={aiData.map(data => ({ date: data.date, score: data.gemini }))} \n                />\n              ))}\n            </div>\n          </div>\n        )}\n        {/* 其他部分 */}\n      </div>\n      <Footer setActiveSection={setActiveSection} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}